# AWS CodeBuild 빌드 버전
version: 0.2

phases:
  # 빌드 환경 설정
  install:
    # 사용할 Java 런타임 버전[17 지원이 안됨으로 커맨드로 java 17 설치]
    runtime-versions:
      java: corretto11
    commands:
      - export JAVA_17_HOME="/usr/lib/jvm/java-17-amazon-corretto.x86_64"
      - export JDK_17_HOME="/usr/lib/jvm/java-17-amazon-corretto.x86_64"
      - export JRE_17_HOME="/usr/lib/jvm/java-17-amazon-corretto.x86_64"
      - export JAVA_HOME="$JAVA_17_HOME"
      - export JRE_HOME="$JRE_17_HOME"
      - export JDK_HOME="$JDK_17_HOME"
      - export JAVA_HOME=$CODEBUILD_AGENT_JAVA_HOME
      - echo "JAVA_HOME set to $JAVA_HOME"
      - |-
        export GNUPGHOME="$(mktemp -d)" \
            && curl -fL -o corretto.key https://yum.corretto.aws/corretto.key \
            && gpg --batch --import corretto.key \
            && gpg --batch --export --armor '6DC3636DAE534049C8B94623A122542AB04F24E3' > corretto.key \
            && rpm --import corretto.key \
            && rm -r "$GNUPGHOME" corretto.key \
            && curl -fL -o /etc/yum.repos.d/corretto.repo https://yum.corretto.aws/corretto.repo \
            && grep -q '^gpgcheck=1' /etc/yum.repos.d/corretto.repo \
            && yum install -y java-17-amazon-corretto-devel \
            && (find /usr/lib/jvm/java-17-amazon-corretto.x86_64 -name src.zip -delete || true) \
            && yum install -y fontconfig
      - |-
#       java 실행 파일에 대한 심볼릭 설정
        for tool_path in "$JAVA_HOME"/bin/*;
         do tool=$(basename "$tool_path");
          if [ $tool != 'java-rmi.cgi' ];
          then
           rm -f /usr/bin/$tool /var/lib/alternatives/$tool \
            && update-alternatives --install /usr/bin/$tool $tool $tool_path 20000;
          fi;
        done
# 빌드 전 실행할 명령어
  pre_build:
    commands:
# gradlew 실행 권한 부여
      - chmod +x gradlew
  build:
    commands:
# gradlew을 사용하여 프로젝트 빌드
      - ./gradlew build
# 빌드 후 생성된 파일 처리
artifacts:
# 빌드된 파일의 경로를 지정
  files: '**/*'
# 파일의 기본 디렉토리 지정
  base-directory: 'build/libs'
  discard-paths: yes
